{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","TodoList","todos","map","getUserByID","userId","usersFromServer","find","todosMapped","App","useState","titleNew","setTitle","userID","setUserID","setTodos","titleError","setTitleError","userError","setUserError","maxId","Math","max","onSubmit","e","preventDefault","htmlFor","type","placeholder","value","onChange","target","disabled","onClick","formTitle","formUserId","trim","length","addTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f5b22893.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ninterface Props {\n  user: User | null;\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${user?.email}`}\n      key={user?.id}\n    >\n      {user?.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    completed,\n    id,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={`${completed === true ? 'TodoInfo TodoInfo--completed' : 'TodoInfo'} `}\n      key={id}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      <UserInfo user={user} />\n\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ninterface Props{\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <>\n      {todos.map((todo: Todo) => (\n        <section className=\"TodoList\" key={todo.id}>\n          <TodoInfo todo={todo} />\n        </section>\n      ))}\n    </>\n  );\n};\n","import './App.scss';\nimport React, { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nconst getUserByID = (userId: number): User | null => {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  // if there is no user with a given userId\n  return foundUser || null;\n};\n\nexport const todosMapped: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserByID(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [titleNew, setTitle] = useState<string>('');\n  const [userID, setUserID] = useState<string>('0');\n  const [todos, setTodos] = useState<Todo[]>(todosMapped);\n  const [titleError, setTitleError] = useState('');\n  const [userError, setUserError] = useState('');\n\n  const maxId = Math.max(...todosMapped.map(todo => todo.id));\n  const addTodo = (formTitle: string, formUserId: string) => {\n    if (titleNew.trim().length !== 0 && +formUserId > 0) {\n      setTitle('');\n      setUserID('0');\n      const todo = {\n        id: maxId + 1,\n        title: formTitle,\n        completed: false,\n        userId: +formUserId,\n        user: getUserByID(+formUserId),\n      };\n\n      setTodos([\n        ...todos,\n        todo,\n      ]);\n    }\n\n    if (titleNew.trim().length === 0) {\n      setTitleError('Please enter a title');\n    }\n\n    if (userID === '0') {\n      setUserError('Please choose a user');\n    }\n  };\n\n  const handleTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setTitleError('');\n  };\n\n  const handleUserChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserID(e.target.value);\n    setUserError('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        onSubmit={e => e.preventDefault()}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">\n            Title: &nbsp;\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              name=\"title\"\n              value={titleNew}\n              onChange={handleTitleChange}\n            />\n            {titleError\n              && <span className=\"error\">Please enter a title</span>}\n\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">\n            User: &nbsp;\n            <select\n              data-cy=\"userSelect\"\n              name=\"userID\"\n              value={userID}\n              onChange={handleUserChange}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map((user) => (\n                <option value={user.id} key={user.id}>{user.name}</option>\n              ))}\n            </select>\n            {userError\n              && <span className=\"error\">Please choose a user</span>}\n          </label>\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={() => addTodo(titleNew, userID)}\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}